import { useState } from "react";

interface CustomCheckboxProps {
  id: string;
  label: string;
  count?: number;
  checked?: boolean;
  onChange?: (checked: boolean) => void;
}

export const CustomCheckbox = ({
  id,
  label,
  count,
  checked: initialChecked = false,
  onChange,
}: CustomCheckboxProps) => {
  const [checked, setChecked] = useState(initialChecked);

  const handleChange = () => {
    const newChecked = !checked;
    setChecked(newChecked);
    if (onChange) {
      onChange(newChecked);
    }
  };

  return (
    <div className="flex items-center gap-2">
      <div
        className="relative w-5 h-5 cursor-pointer flex-shrink-0"
        onClick={handleChange}
      >
        <input
          type="checkbox"
          id={id}
          className="sr-only"
          checked={checked}
          onChange={handleChange}
        />
        {checked ? (
          <svg
            width="22"
            height="22"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="absolute top-0 left-0"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M11 21.0002C6.28595 21.0002 3.92893 21.0002 2.46447 19.5358C1 18.0713 1 15.7143 1 11.0002C1 6.2862 1 3.92918 2.46447 2.46471C3.92893 1.00024 6.28595 1.00024 11 1.00024C15.714 1.00024 18.0711 1.00024 19.5355 2.46471C21 3.92918 21 6.2862 21 11.0002C21 15.7143 21 18.0713 19.5355 19.5358C18.0711 21.0002 15.714 21.0002 11 21.0002ZM15.0303 7.96991C15.3232 8.26281 15.3232 8.73768 15.0303 9.03057L10.0303 14.0306C9.73744 14.3235 9.26256 14.3235 8.96967 14.0306L6.96967 12.0306C6.67678 11.7377 6.67678 11.2628 6.96967 10.9699C7.26256 10.677 7.73744 10.677 8.03033 10.9699L9.5 12.4396L13.9697 7.96991C14.2626 7.67702 14.7374 7.67702 15.0303 7.96991Z"
              fill="#025FCA"
            />
            <path
              d="M15.0303 9.03057L15.5607 9.5609L15.0303 9.03057ZM15.0303 7.96991L15.5607 7.43958L15.5607 7.43958L15.0303 7.96991ZM10.0303 14.0306L10.5607 14.5609L10.5607 14.5609L10.0303 14.0306ZM8.96967 14.0306L8.43934 14.5609L8.43934 14.5609L8.96967 14.0306ZM6.96967 12.0306L6.43934 12.5609L6.96967 12.0306ZM6.96967 10.9699L6.43934 10.4396L6.96967 10.9699ZM8.03033 10.9699L8.56066 10.4396L8.03033 10.9699ZM9.5 12.4396L8.96967 12.9699L9.5 13.5002L10.0303 12.9699L9.5 12.4396ZM13.9697 7.96991L13.4393 7.43958L13.9697 7.96991ZM11 21.0002V20.2502C8.62178 20.2502 6.91356 20.2487 5.61358 20.0739C4.33517 19.902 3.56445 19.5751 2.9948 19.0054L2.46447 19.5358L1.93414 20.0661C2.82895 20.9609 3.96897 21.3663 5.41371 21.5605C6.83687 21.7518 8.66418 21.7502 11 21.7502V21.0002ZM1 11.0002H0.25C0.25 13.3361 0.248407 15.1634 0.439746 16.5865C0.633986 18.0313 1.03933 19.1713 1.93414 20.0661L2.46447 19.5358L2.9948 19.0054C2.42514 18.4358 2.09825 17.6651 1.92637 16.3867C1.75159 15.0867 1.75 13.3785 1.75 11.0002H1ZM21 11.0002H20.25C20.25 13.3785 20.2484 15.0867 20.0736 16.3867C19.9018 17.6651 19.5749 18.4358 19.0052 19.0054L19.5355 19.5358L20.0659 20.0661C20.9607 19.1713 21.366 18.0313 21.5603 16.5865C21.7516 15.1634 21.75 13.3361 21.75 11.0002H21ZM11 21.0002V21.7502C13.3358 21.7502 15.1631 21.7518 16.5863 21.5605C18.031 21.3663 19.1711 20.9609 20.0659 20.0661L19.5355 19.5358L19.0052 19.0054C18.4355 19.5751 17.6648 19.902 16.3864 20.0739C15.0864 20.2487 13.3782 20.2502 11 20.2502V21.0002ZM11 1.00024V1.75024C13.3782 1.75024 15.0864 1.75184 16.3864 1.92661C17.6648 2.09849 18.4355 2.42538 19.0052 2.99504L19.5355 2.46471L20.0659 1.93438C19.1711 1.03957 18.031 0.63423 16.5863 0.43999C15.1631 0.248651 13.3358 0.250244 11 0.250244V1.00024ZM21 11.0002H21.75C21.75 8.66442 21.7516 6.83711 21.5603 5.41395C21.366 3.96921 20.9607 2.82919 20.0659 1.93438L19.5355 2.46471L19.0052 2.99504C19.5749 3.5647 19.9018 4.33542 20.0736 5.61382C20.2484 6.9138 20.25 8.62202 20.25 11.0002H21ZM11 1.00024V0.250244C8.66418 0.250244 6.83687 0.248651 5.41371 0.43999C3.96897 0.63423 2.82895 1.03957 1.93414 1.93438L2.46447 2.46471L2.9948 2.99504C3.56445 2.42538 4.33517 2.09849 5.61358 1.92661C6.91356 1.75184 8.62178 1.75024 11 1.75024V1.00024ZM1 11.0002H1.75C1.75 8.62202 1.75159 6.9138 1.92637 5.61382C2.09825 4.33542 2.42514 3.5647 2.9948 2.99504L2.46447 2.46471L1.93414 1.93438C1.03933 2.82919 0.633986 3.96921 0.439746 5.41395C0.248407 6.83711 0.25 8.66442 0.25 11.0002H1ZM15.0303 9.03057L15.5607 9.5609C16.1464 8.97512 16.1464 8.02537 15.5607 7.43958L15.0303 7.96991L14.5 8.50024V8.50024L15.0303 9.03057ZM10.0303 14.0306L10.5607 14.5609L15.5607 9.5609L15.0303 9.03057L14.5 8.50024L9.5 13.5002L10.0303 14.0306ZM8.96967 14.0306L8.43934 14.5609C9.02513 15.1467 9.97487 15.1467 10.5607 14.5609L10.0303 14.0306L9.5 13.5002H9.5L8.96967 14.0306ZM6.96967 12.0306L6.43934 12.5609L8.43934 14.5609L8.96967 14.0306L9.5 13.5002L7.5 11.5002L6.96967 12.0306ZM6.96967 10.9699L6.43934 10.4396C5.85355 11.0254 5.85355 11.9751 6.43934 12.5609L6.96967 12.0306L7.5 11.5002V11.5002L6.96967 10.9699ZM8.03033 10.9699L8.56066 10.4396C7.97487 9.8538 7.02513 9.8538 6.43934 10.4396L6.96967 10.9699L7.5 11.5002L8.03033 10.9699ZM9.5 12.4396L10.0303 11.9093L8.56066 10.4396L8.03033 10.9699L7.5 11.5002L8.96967 12.9699L9.5 12.4396ZM13.9697 7.96991L13.4393 7.43958L8.96967 11.9093L9.5 12.4396L10.0303 12.9699L14.5 8.50024L13.9697 7.96991ZM15.0303 7.96991L15.5607 7.43958C14.9749 6.8538 14.0251 6.8538 13.4393 7.43958L13.9697 7.96991L14.5 8.50024H14.5L15.0303 7.96991Z"
              fill="white"
            />
          </svg>
        ) : (
          <svg
            width="22"
            height="22"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="absolute top-0 left-0"
          >
            <path
              d="M11 21.0002C6.28595 21.0002 3.92893 21.0002 2.46447 19.5358C1 18.0713 1 15.7143 1 11.0002C1 6.2862 1 3.92918 2.46447 2.46471C3.92893 1.00024 6.28595 1.00024 11 1.00024C15.714 1.00024 18.0711 1.00024 19.5355 2.46471C21 3.92918 21 6.2862 21 11.0002C21 15.7143 21 18.0713 19.5355 19.5358C18.0711 21.0002 15.714 21.0002 11 21.0002Z"
              stroke="#CECCCA"
              fill="white"
              strokeWidth="1.5"
            />
          </svg>
        )}
      </div>
      <label
        htmlFor={id}
        className="cursor-pointer text-sm font-medium text-primary-new"
      >
        {label}{" "}
        <span className="font-normal text-secondary-new">
          {count !== undefined && `(${count})`}
        </span>
      </label>
    </div>
  );
};
